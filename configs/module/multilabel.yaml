_target_: src.modules.multilabel_module.MultilabelModule

defaults:
  - _self_
  - network: ast.yaml

task: multilabel
class_weights_loss: ${datamodule.dataset.class_weights_loss}
prediction_table: True

optimizer:
  _target_: torch.optim.AdamW
  lr: 1e-5
  weight_decay: 0.01

loss:
  #_target_: src.modules.losses.asymmetric_loss.AsymmetricLossMultiLabel
  _target_: torch.nn.BCEWithLogitsLoss
  #_target_: src.modules.losses.focal_loss.MultiLabelFocalLoss
  
lr_scheduler:
  scheduler:
    _target_: transformers.get_cosine_schedule_with_warmup
  extras:
    interval: step
    warmup_ratio: 0.05

metrics: 
  main: 
    _target_: src.modules.metrics.cmAP
    num_labels: ${datamodule.dataset.n_classes}
    sample_threshold: 0
    thresholds: null
  # main:
  #   _target_: torchmetrics.classification.AveragePrecision
  #   task: multilabel
  #   num_labels: ${datamodule.dataset.n_classes}
  #   average: macro

  val_best: 
    _target_: "torchmetrics.MaxMetric"
  additional: 
    auroc:
      _target_: "torchmetrics.classification.AUROC"
      task: "multilabel"
      num_labels: ${datamodule.dataset.n_classes} 
      average: "macro"
      thresholds: null
    t1acc:
      _target_: src.modules.metrics.TopKAccuracy
      topk: 1
    t3acc:
      _target_: src.modules.metrics.TopKAccuracy
      topk: 5
    map:
      _target_: src.modules.metrics.mAP
      num_labels: ${datamodule.dataset.n_classes}
    
      thresholds: null
  eval_complete:
    pcmap:
      _target_: src.modules.metrics.pcmAP
      num_labels: ${datamodule.dataset.n_classes}
      padding_factor: 5
      average: macro
      thresholds: null
    cmap5:
      _target_: src.modules.metrics.cmAP
      num_labels: ${datamodule.dataset.n_classes}
      sample_threshold: 5
      thresholds: null

output_activation: 
  _target_: "torch.sigmoid"

logging_params:
  on_step: False
  on_epoch: True
  sync_dist: False
  prog_bar: True  

